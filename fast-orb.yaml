version: 2.1
description: >
  Run FAST with CI_MODE=testing. Run security specs based on previously recorded test_record.

commands:
  run_security_tests:
    description: >
      Start FAST container in testing mode

    parameters:
      test_app_uri:
        description: Tested application uri in docker-compose. Must be started with http or https
        type: string
      test_record_id:
        description: Test record id in Wallarm cloud
        type: string

    steps:
      - run: 
          name: Run security tests
          command: |
            docker run --name fast \
              -e WALLARM_API_TOKEN=$WALLARM_API_TOKEN \
              -e WALLARM_API_HOST=api.wallarm.com \
              -e CI_MODE=testing \
              -e TEST_RUN_URI=<<parameters.test_app_uri>> \
              -e TEST_RECORD_ID=<<parameters.test_record_id>> \
              -p 8080:8080 \
              wallarm/fast
examples:
  fast-example-rails:
    description: |
      Example using Wallarm's FAST to run tests against a Rails app using Rspec, Capybara, and Selenium. Taken from https://github.com/wallarm/fast-examples-rails.
    usage:
      version: 2.1
      orbs:
        fast: wallarm/fast@dev:x.y.z
      jobs:
        build:
          docker:
            - image: debian:stretch

          steps:
            - checkout
            # This should go into custom primary image, here's only for the sake of explanation
            - run:
                name: Install Docker client
                command: |
                  set -x
                  VER="17.03.0-ce"
                  apt-get update && apt-get install curl -y
                  curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
                  tar -xz -C /tmp -f /tmp/docker-$VER.tgz
                  mv /tmp/docker/* /usr/bin
            - setup_remote_docker
            - run:
                name: Build docker
                command: |
                  docker build -t app-test .
            - run:
                name: Run application
                command: |
                  docker run -d -p 3000:3000 app-test
            - fast/run_security_tests:
                test_app_uri: http://0.0.0.0:3000
                test_record_id: "<test_record_id>"